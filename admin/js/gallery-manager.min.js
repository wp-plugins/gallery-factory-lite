var VLS_GF = VLS_GF || {};
VLS_GF.GalleryManager = function (b) {
    var q, r, m;

    function t(k, e, d, a) {
        "all_images" == k || "unsorted_images" == k ? (e = 0, b("#vls-gf-tab-panel").slideUp(), "all_images" == k ? d = "All images" : "unsorted_images" == k && (d = "Unsorted images"), b(".vls-gf-window-title > .vls-gf-shortcode").css("display", "none").find("input").val("")) : (b("#vls-gf-tab-panel").slideDown(), b(".vls-gf-window-title .vls-gf-shortcode").css("display", "").find("input").val(a));
        b(".vls-gf-window-title > span").first().text(d);
        q = k;
        r = e;
        m = "album_overview";
        g(m);
        return !1
    }

    function g(b) {
        b = b.replace("#", "");
        H.append('<div class="vls-gf-loading-overlay"><span></span></div>');
        D.find("li").removeClass("active");
        D.find('a[href="#' + b + '"]:first').parent().addClass("active");
        switch (b) {
            case "album_overview":
                VLS_GF.AlbumOverviewPanelModule.loadContent(q, r);
                break;
            case "album_layout":
                VLS_GF.AlbumLayoutPanelModule.loadContent(r);
                break;
            case "album_edit":
                VLS_GF.ItemEditPanelModule.loadContent("album", r)
        }
        return !1
    }

    function e() {
        return b('<div class="vls-gf-modal"><div class="vls-gf-backdrop"></div><div class="vls-gf-window"></div></div>')
    }

    function u() {
        b(".vls-gf-modal").remove()
    }

    function w() {
        var k = b(this).closest(".vls-gf-modal");
        if (k.hasClass("vls-gf-busy"))return !1;
        var e = k.data("vlsGfImages"), d = k.data("vlsGfLinks"), a = k.data("vlsGfCurrentImage"), a = e.indexOf(a);
        0 < a && (a--, k.data("vlsGfCurrentImage", e[a]), A(k, e[a], d[a]))
    }

    function G() {
        var k = b(this).closest(".vls-gf-modal");
        if (k.hasClass("vls-gf-busy"))return !1;
        var e = k.data("vlsGfImages"), d = k.data("vlsGfLinks"), a = k.data("vlsGfCurrentImage"), a = e.indexOf(a);
        a < e.length - 1 && (a++, k.data("vlsGfCurrentImage",
            e[a]), A(k, e[a], d[a]))
    }

    function A(e, g, d) {
        e.addClass("vls-gf-busy");
        b.getJSON(ajaxurl, {action: "vls_gf_view_image_details", image_id: g, link_id: d}, function (b) {
            e.find(".vls-gf-content").empty().append(b.view);
            b = e.find(".vls-gf-window");
            b.css("margin-top", 0 - b.height() / 2);
            e.removeClass("vls-gf-busy")
        })
    }

    function E() {
        var e = b(".vls-gf-modal"), g = e.find(".vls-gf-window button.button-primary");
        if (!g.hasClass("vls-gf-processing")) {
            g.addClass("vls-gf-processing");
            var d = {action: "vls_gf_update_image_details"};
            e.find(".vls-gf-window").find("form input, form select, form textarea").each(function () {
                d[this.name] =
                    this.value
            });
            b.post(ajaxurl, d, function (b) {
                g.removeClass("vls-gf-processing");
                e.find(".vls-gf-update-feedback").show().fadeOut(3E3)
            })
        }
    }

    var D, H;
    q = "unsorted_images";
    r = 0;
    m = "album_overview";
    return {
        init: function () {
            D = b("#vls-gf-tab-panel");
            H = b(".vls-gf-tab-view");
            D.find("ul > li > a").on("click.vls-gf", function (e) {
                g(b(this).attr("href"));
                e.preventDefault()
            });
            VLS_GF.AlbumsPanelModule.init();
            t(q, r)
        }, switchAlbum: t, reloadTab: function () {
            g(m)
        }, showConfirmDialog: function (k, g, d) {
            var a = e(), h = a.find(".vls-gf-window");
            h.append('<div class="vls-gf-title"><span>Confirm delete</span></div>');
            var n = b('<div class="vls-gf-content"></div>');
            h.append(n);
            n.append('<span class="vls-gf-message">' + k + "</span>");
            k = b('<div class="vls-gf-buttons-panel"></div>');
            h.append(k);
            n = b('<a class="button" href="#">Cancel</a>');
            n.on("click.vls-gf", u);
            k.append(n);
            g = b('<a class="button-primary" href="#"></a>').text(g);
            g.on("click.vls-gf", d);
            k.append(g);
            b("#wpwrap").append(a);
            h.css("margin-top", 0 - h.height() / 2)
        }, showNameDialog: function (g, m) {
            var d =
                "", a = "", h = "";
            "rename" === g ? (d = "Rename item", a = "Rename", h = "New name") : "createFolder" === g ? (d = "New folder", a = "Create", h = "Folder name") : "createAlbum" === g && (d = "New album", a = "Create", h = "Album name");
            var n = e(), c = n.find(".vls-gf-window");
            c.append('<div class="vls-gf-title"><span>' + d + "</span></div>");
            d = b('<div class="vls-gf-content"></div>');
            c.append(d);
            d.append('<label class="vls-gf-form-element"><span>' + h + '</span><input type="text" value="" /></label>');
            h = d.find("input");
            h.on("keyup.vls-gf", function (b) {
                13 ==
                b.keyCode && m()
            });
            d = b('<div class="vls-gf-buttons-panel"></div>');
            c.append(d);
            var p = b('<a class="button" href="#">Cancel</a>');
            p.on("click.vls-gf", u);
            d.append(p);
            a = b('<a class="button-primary" href="#"></a>').text(a);
            a.on("click.vls-gf", m);
            d.append(a);
            b("#wpwrap").append(n);
            c.css("margin-top", 0 - c.height() / 2);
            h.focus()
        }, showImageDetailsDialog: function (g, m, d, a) {
            var h = e();
            h.data("vlsGfImages", d);
            h.data("vlsGfLinks", a);
            h.data("vlsGfCurrentImage", g);
            b("#wpwrap").append(h);
            d = h.find(".vls-gf-window");
            d.css({
                width: "680px",
                "margin-left": "-340px"
            });
            var n = b("<div />").addClass("vls-gf-title").append(b("<span/>").text(vlsGfGalleryAdminData.l10n.strImageDetails));
            d.append(n);
            a = b("<div />").addClass("vls-gf-window-controls");
            n.append(a);
            n = b("<button/>").addClass("vls-gf-btn-prev").text("<");
            n.on("click.vls-gf", w);
            a.append(n);
            n = b("<button/>").addClass("vls-gf-btn-next").text(">");
            n.on("click.vls-gf", G);
            a.append(n);
            n = b("<button/>").addClass("vls-gf-btn-cancel").text("\u00d7");
            n.on("click.vls-gf", u);
            a.append(n);
            d.append('<div class="vls-gf-content"></div>');
            a = b('<div class="vls-gf-buttons-panel"><span class="vls-gf-update-feedback">saved</span></div>');
            d.append(a);
            d = b('<a class="button-primary" href="#">' + vlsGfGalleryAdminData.l10n.btnSave + "</a>");
            d.on("click.vls-gf", E);
            a.append(d);
            A(h, g, m)
        }, closePopup: u
    }
}(jQuery);
VLS_GF.AlbumsPanelModule = function (b) {
    function q() {
        b.get(ajaxurl, {
            action: "vls_gf_view_gallery_tree",
            tour: VLS_GF.TourModule && VLS_GF.TourModule.isActive()
        }, function (b) {
            d.empty().append(b);
            d.find("li").on("click.vls-gf touchend.vls-gf", w);
            r();
            d.parent().find("li.unsorted, li.album").droppable({
                accept: ".dragging-image",
                hoverClass: "drop-ready",
                drop: F
            })
        }, "html")
    }

    function r() {
        a.nextItemOrder = 99999;
        var n = 0, c = 100, p = !1, e = 1, l = 1, f = 0, g = d.find("li").not(".vls-gf-deleted");
        g.sort(function (c, a) {
            return parseInt(b(c).data("vlsGfOrder")) -
                parseInt(b(a).data("vlsGfOrder"))
        });
        for (var z = 0; z < g.length; ++z) {
            var v = b(g[z]), C = parseInt(v.data("vlsGfLevel"));
            C > c ? (v.addClass("vls-hidden"), v.css({
                position: "absolute",
                top: (n - 1) * h.height + "px"
            }), v.data("vlsGfPosition", n - 1).attr("data-vls-gf-position", n - 1)) : (++f, c = 100, v.removeClass("vls-hidden"), v.hasClass("folder") && !v.hasClass("opened") && (c = parseInt(v.data("vlsGfLevel"))), a.ghostPosition == n && ++n, v.hasClass("ui-draggable-dragging") || (v.css({top: n * h.height + "px"}), v.data("vlsGfPosition", n).attr("data-vls-gf-position",
                n), n == a.ghostPosition - 1 ? (p = v.hasClass("folder"), e = C) : n == a.ghostPosition + 1 && (l = C, a.nextItemOrder = parseInt(v.data("vlsGfOrder"))), ++n))
        }
        a.$draggedItem && (a.ghostLevel += a.initialLevel, l <= e ? (p && (e += e < (a.$draggedItem.hasClass("folder") ? 2 : 3) ? 1 : 0), a.ghostLevel > e ? a.ghostLevel = e : a.ghostLevel < l && (a.ghostLevel = l)) : a.ghostLevel = l, a.ghostPosition >= f && (a.ghostPosition = f - 1), a.$draggingGhost.css("top", a.ghostPosition * h.height + "px"), a.$draggingGhost.attr("class", "dragging-ghost"), a.$draggingGhost.addClass("level-" +
        a.ghostLevel));
        d.css("height", 28 * f + "px")
    }

    function m(b, c) {
        b.hasClass("opened") && "open" != c ? (b.removeClass("opened"), r()) : b.hasClass("opened") || "close" == c || (b.addClass("opened"), r())
    }

    function t(e, c) {
        var p = b(this);
        a.itemTreeOffset = {top: d.offset().top, left: d.offset().left};
        p.removeClass("opened");
        d.find("li").draggable("disable");
        a.$draggedItem = p;
        a.ghostPosition = Math.floor((p.offset().top - a.itemTreeOffset.top + h.middle) / h.height);
        a.initialLevel = parseInt(p.data("vlsGfLevel"));
        var x = d.find("li");
        x.sort(function (c,
                         a) {
            return parseInt(b(c).data("vlsGfOrder")) - parseInt(b(a).data("vlsGfOrder"))
        });
        for (var l = !1, f = 0; f < x.length; ++f) {
            var g = b(x[f]);
            parseInt(g.data("vlsGfId"));
            var z = parseInt(g.data("vlsGfOrder")), v = parseInt(g.data("vlsGfLevel"));
            parseInt(p.data("vlsGfId"));
            var C = parseInt(p.data("vlsGfOrder"));
            g.is(p) || (z > C && v <= a.initialLevel && !l ? l = !0 : z > C && v > a.initialLevel && !l && g.addClass("vls-gf-dragging-child"))
        }
        d.append(a.$draggingGhost);
        r()
    }

    function g(e, c) {
        var p = parseInt(c.offset.top) + h.middle;
        if (!(p >= a.currentArea.top &&
            p <= a.currentArea.bottom && c.offset.left >= a.currentArea.left && c.offset.left <= a.currentArea.right)) {
            clearTimeout(a.hoverTimeout);
            var g = Math.floor((p - a.itemTreeOffset.top) / h.height);
            0 > g && (g = 0);
            a.ghostLevel = Math.floor((parseInt(c.offset.left) - a.itemTreeOffset.left) / 10);
            a.currentArea.left = a.itemTreeOffset.left + 10 * a.ghostLevel;
            a.currentArea.right = a.itemTreeOffset.left + 10 * (a.ghostLevel + 1) - 1;
            var l = a.itemTreeOffset.top + h.height * g, p = p - l + 1, f = d.find("li").filter(function (c, a) {
                var v = b(a);
                return v.data("vlsGfPosition") ==
                    g && !v.hasClass("vls-hidden") && !v.hasClass("ui-draggable-dragging")
            });
            f && f.hasClass("folder") && !f.hasClass("opened") ? g > a.ghostPosition && p > h.bottomPart ? (a.ghostPosition = g, a.currentArea.top = l, a.currentArea.bottom = l + h.height - 1) : g < a.ghostPosition && p <= h.topPart ? (a.ghostPosition = g, a.currentArea.top = l, a.currentArea.bottom = l + h.height - 1) : (g > a.ghostPosition ? (a.currentArea.top = l, a.currentArea.bottom = l + h.bottomPart) : (a.currentArea.top = l + h.topPart, a.currentArea.bottom = l + h.height - 1), a.hoverTimeout = setTimeout(function () {
                m(f,
                    "open")
            }, 500)) : (a.ghostPosition = g, a.currentArea.top = l, a.currentArea.bottom = l + h.height - 1);
            r()
        }
    }

    function e() {
        var a = b(this);
        a.addClass("ui-draggable-placing");
        setTimeout(function () {
            a.removeClass("ui-draggable-placing")
        }, 550);
        return !1
    }

    function u(e, c) {
        var g = !1, x = b(this), l = d.find("li").not(".vls-gf-dragging-child, .ui-draggable-dragging");
        l.sort(function (c, a) {
            var v = b(c), f = b(a);
            return 1E5 * parseInt(v.data("vlsGfPosition")) + parseInt(v.data("vlsGfOrder")) - 1E5 * parseInt(f.data("vlsGfPosition")) - parseInt(f.data("vlsGfOrder"))
        });
        var f = d.find("li.vls-gf-dragging-child");
        f.sort(function (c, a) {
            return parseInt(b(c).data("vlsGfOrder")) - parseInt(b(a).data("vlsGfOrder"))
        });
        for (var h = 0, z = 0; z <= l.length; ++z) {
            if (z < l.length)var v = b(l[z]);
            ++h;
            if (!g && (z == l.length && 99999 == a.nextItemOrder || v.hasClass("vls-gf-deleted") || z < l.length && a.nextItemOrder == parseInt(v.data("vlsGfOrder")))) {
                g = !0;
                x.data("vlsGfOrder", h).attr("data-vls-gf-order", h);
                ++h;
                for (var C = 0; C < f.length; ++C) {
                    var m = b(f[C]), k = parseInt(m.data("vlsGfLevel")) + a.ghostLevel - a.initialLevel,
                        k = 3 < k ? 3 : k;
                    m.data("vlsGfOrder", h).attr("data-vls-gf-order", h).data("vlsGfLevel", k).attr("data-vls-gf-level", k).data("vlsGfPosition", k).attr("data-vls-gf-position", a.ghostPosition).removeClass("level-1 level-2 level-3 level-4 level-5 level-6 level-7").addClass("level-" + k).css("top", a.$draggingGhost.css("top"));
                    ++h
                }
            }
            z < l.length && v.data("vlsGfOrder", h).attr("data-vls-gf-order", h)
        }
        x.css({
            left: "0px",
            top: a.$draggingGhost.css("top")
        }).removeClass("ui-draggable-dragging level-1 level-2 level-3 level-4 level-5 level-6 level-7").addClass("level-" +
        a.ghostLevel).data("vlsGfPosition", a.ghostPosition).attr("data-vls-gf-position", a.ghostPosition).data("vlsGfLevel", a.ghostLevel).attr("data-vls-gf-level", a.ghostLevel);
        d.find("li").removeClass("vls-gf-dragging-child").draggable("enable");
        a.$draggedItem = null;
        a.ghostPosition = -1;
        a.items = [];
        a.$draggingGhost.remove();
        r()
    }

    function w() {
        var a = b(this);
        a.hasClass("ui-draggable-dragging") || a.hasClass("ui-draggable-placing") || (a.hasClass("folder") ? m(a) : a.hasClass("album") && (b(".vls-gf-gallery-manager-container .left-panel ul>li>span.wp-ui-highlight").remove(),
            a.append('<span class="wp-ui-highlight">'), VLS_GF.GalleryManager.switchAlbum("album", a.data("vlsGfId"), a.find(".label").text(), a.data("vlsGfShortcode"))));
        return !1
    }

    function G(a) {
        var c = b(this).closest("li");
        VLS_GF.GalleryManager.showNameDialog("rename", function () {
            var a = b(".vls-gf-modal").first().find("input").val();
            a && "" != a ? (c.find(".label").text(a), c.data("vlsGfIsRenamed", "true").attr("data-vls-gf-is-renamed", "true"), VLS_GF.GalleryManager.closePopup()) : alert("Name must be entered")
        });
        return !1
    }

    function A(a) {
        var c =
            "", e = "";
        "vls-gf-btn-add-new-folder" == a.target.id ? (c = "folder", e = "createFolder") : (c = "album", e = "createAlbum");
        VLS_GF.GalleryManager.showNameDialog(e, function () {
            var a = b(".vls-gf-modal").first().find("input").val();
            if (a && "" != a) {
                var e = d.find("li"), f = 0;
                0 < e.length && (f = parseInt(e.sort(function (a, c) {
                    return parseInt(b(a).data("vlsGfOrder")) - parseInt(b(c).data("vlsGfOrder"))
                }).last().data("vlsGfOrder")));
                a = b('<li class="' + c + ' level-1"><a href="#"><span class="icon"></span><span class="label">' + a + '</span></a><span class="btn btn-delete"></span><span class="btn btn-rename"></span></li>');
                a.data("vlsGfId", 0).attr("data-vls-gf-id", 0).data("vlsGfLevel", 1).attr("data-vls-gf-level", 1).data("vlsGfOrder", f + 1).attr("data-vls-gf-order", f + 1).data("vlsGfPosition", 99999).attr("data-vls-gf-position", 99999).data("vlsGfIsAdded", "true").attr("data-vls-gf-is-added", "true").css("top", d.height() - 28 + "px");
                d.append(a);
                a.bind("click.vls-gf", w);
                a.find(".btn-rename").on("click.vls-gf", G);
                a.find(".btn-delete").on("click.vls-gf", E);
                k();
                r();
                VLS_GF.GalleryManager.closePopup()
            } else alert("Name must be entered")
        })
    }

    function E() {
        var a = "", c = b(this).closest("li"), a = c.hasClass("album") ? 'Delete album "' + c.find(".label").text() + '"?' : 'Delete folder "' + c.find(".label").text() + '" and all its descendants?';
        VLS_GF.GalleryManager.showConfirmDialog(a, "Delete", function () {
            var a = 0;
            d.find("li").not(".vls-gf-deleted").sort(function (a, c) {
                return parseInt(b(a).data("vlsGfOrder")) - parseInt(b(c).data("vlsGfOrder"))
            }).each(function () {
                var e = b(this);
                if (e.is(c))a = parseInt(e.data("vlsGfLevel")); else if (0 < a) {
                    var g = parseInt(e.data("vlsGfLevel"));
                    if (g > a)e.addClass("vls-gf-deleted").data("vlsGfLevel", g - a + 1).attr("data-vls-gf-level", g - a + 1).data("vlsGfPosition", 99999).attr("data-vls-gf-position", 99999); else return !1
                }
            });
            c.addClass("vls-gf-deleted").data("vlsGfLevel", 1).attr("data-vls-gf-level", 1).data("vlsGfIsDeleted", "true").attr("data-vls-gf-is-deleted", "true").data("vlsGfPosition", 99999).attr("data-vls-gf-position", 99999);
            r();
            VLS_GF.GalleryManager.closePopup();
            return !1
        });
        return !1
    }

    function D(a) {
        if (0 < d.find(".vls-gf-loading-overlay").length)return !1;
        b(this).css("display", "none");
        b("#vls-gf-panel-edit-gallery-tree").css("display", "block");
        var c = d.find("li");
        c.append('<span class="btn btn-delete"></span><span class="btn btn-rename"></span>');
        c.find(".btn-rename").on("click.vls-gf", G);
        c.find(".btn-delete").on("click.vls-gf", E);
        k();
        a.preventDefault()
    }

    function H(a) {
        d.find("li").draggable("destroy").find(".btn").remove();
        b("#vls-gf-panel-edit-gallery-tree").css("display", "none");
        b("#vls-gf-btn-edit-gallery-tree").css("display", "block");
        d.append('<div class="vls-gf-loading-overlay"><span></span></div>');
        if ("vls-gf-btn-gallery-tree-commit" == a.target.id) {
            var c = [];
            d.find("li").each(function () {
                var a = b(this), e = "", g = "", f = "", d = "", h = "";
                a.data("vlsGfIsAdded") && (f = a.data("vlsGfIsAdded"));
                a.data("vlsGfIsRenamed") && (d = a.data("vlsGfIsRenamed"));
                a.data("vlsGfIsDeleted") && (h = a.data("vlsGfIsDeleted"));
                f && (g = a.hasClass("album") ? "album" : "folder");
                if (f || d)e = a.find(".label").text();
                c.push({
                    id: parseInt(a.data("vlsGfId")),
                    type: g,
                    order: parseInt(a.data("vlsGfOrder")),
                    level: parseInt(a.data("vlsGfLevel")),
                    name: e,
                    is_added: f,
                    is_renamed: d,
                    is_deleted: h
                })
            });
            b.post(ajaxurl, {
                action: "vls_gf_commit_gallery_tree_changes",
                security: vlsGfGalleryAdminData.nonce,
                itemData: JSON.stringify(c)
            }, function (a) {
                q()
            }, "json")
        } else q();
        return !1
    }

    function k() {
        d.find("li").draggable({
            distance: 2,
            addClasses: !1,
            cursor: "move",
            cancel: ".btn",
            start: t,
            drag: g,
            revert: e,
            stop: u
        })
    }

    function F(a, c) {
        var e = c.helper.data("sourceAlbum"), g;
        g = b(a.target).hasClass("unsorted") ? 0 : parseInt(b(a.target).data("vlsGfId"));
        var d = c.helper.data("draggedImages");
        e !== g && b.post(ajaxurl,
            {
                action: "vls_gf_move_images_to_album",
                security: vlsGfGalleryAdminData.nonce,
                images: JSON.stringify(d),
                source_album: e,
                target_album: g
            }, VLS_GF.GalleryManager.reloadTab)
    }

    var d, a = {
        $draggedItem: null,
        $draggingGhost: b('<div class="dragging-ghost"><div></div></div>'),
        itemTreeOffset: {top: 0, bottom: 0},
        currentArea: {top: 0, bottom: 0, left: 0, right: 0},
        initialLevel: 0,
        nextItemOrder: 99999,
        hoverTimeout: {},
        ghostPosition: -1,
        ghostLevel: 0
    }, h = {height: 28, middle: 14, topPart: 11, bottomPart: 18};
    return {
        init: function () {
            b(".vls-gf-gallery-manager-container .left-panel ul.fixed-items a").on("click.vls-gf",
                function (a) {
                    var c = b(this);
                    b(".vls-gf-gallery-manager-container .left-panel ul>li>span.wp-ui-highlight").remove();
                    c.parent().append('<span class="wp-ui-highlight">');
                    c = c.attr("href").replace("#", "");
                    VLS_GF.GalleryManager.switchAlbum(c, 0);
                    a.preventDefault()
                });
            d = b("#vls-gf-gallery-tree");
            b("#vls-gf-btn-edit-gallery-tree").on("click.vls-gf", D);
            b("#vls-gf-btn-gallery-tree-commit, #vls-gf-btn-gallery-tree-cancel").on("click.vls-gf", H);
            b("#vls-gf-btn-add-new-folder, #vls-gf-btn-add-new-album").on("click.vls-gf",
                A);
            q()
        }, loadGalleryTree: q
    }
}(jQuery);
VLS_GF.AlbumOverviewPanelModule = function (b) {
    function q(w) {
        b(".vls-gf-tab-view").empty().append(w);
        e = b(".vls-gf-tab-view .vls-gf-image-panel");
        w = {
            thumb_width: 140,
            thumb_height: 140,
            sortable: !0,
            dragdrop: !0,
            views: {list: !1, thumbs: !0, active: "thumbs"},
            multipart_params: {action: "vls_gf_async_upload", album_id: g},
            flash_swf_url: "/plupload/js/Moxie.swf",
            silverlight_xap_url: "/plupload/js/Moxie.xap",
            stop: function () {
                VLS_GF.GalleryManager.reloadTab()
            },
            complete: function () {
                VLS_GF.GalleryManager.reloadTab()
            }
        };
        var q = {
            action: "vls_gf_async_upload",
            album_id: g
        };
        b.extend(q, vls_plupload_setup_object.multipart_params);
        b.extend(w, vls_plupload_setup_object);
        w.multipart_params = q;
        b("#vls-gf-upload-panel").plupload(w);
        b("#vls-gf-upload-image-button").on("click.vls-gf", function (e) {
            b(".vls-gf-toolbar").slideUp();
            b("#vls-gf-upload-panel").slideDown();
            e.preventDefault()
        });
        b("#vls-gf-upload-panel .plupload_cancel").on("click.vls-gf", function (e) {
            b("#vls-gf-upload-panel").slideUp();
            b(".vls-gf-toolbar").slideDown()
        });
        b("#vls-gf-bulk-select-start-button").on("click.vls-gf",
            function (g) {
                e.addClass("select-mode");
                b("#vls-gf-toolbar-image-overview").fadeOut();
                b("#vls-gf-toolbar-bulk-select-left").fadeIn();
                b("#vls-gf-toolbar-bulk-select-right").fadeIn();
                g.preventDefault()
            });
        b("#vls-gf-bulk-select-cancel-button").on("click.vls-gf", function (g) {
            e.removeClass("select-mode");
            e.find("li").removeClass("selected").find(".image-icon").remove();
            b("#vls-gf-toolbar-image-overview").fadeIn();
            b("#vls-gf-toolbar-bulk-select-left").fadeOut();
            b("#vls-gf-toolbar-bulk-select-right").fadeOut();
            u = null;
            g.preventDefault()
        });
        b("#vls-gf-bulk-select-delete-button").on("click.vls-gf", function (m) {
            var t = [];
            e.find("li.selected").each(function () {
                t.push(parseInt(b(this).data("vlsGfImageId")))
            });
            b.post(ajaxurl, {action: "vls_gf_delete_images", images: t, album: g}, VLS_GF.GalleryManager.reloadTab);
            u = null;
            m.preventDefault()
        });
        b("#vls-gf-bulk-select-all-button").on("click.vls-gf", function (e) {
            b(".vls-gf-tab-view .vls-gf-image-panel li").not(".selected").addClass("selected").append('<div class="image-icon"><span></span></div>');
            u = null;
            e.preventDefault()
        });
        b("#vls-gf-bulk-select-none-button").on("click.vls-gf", function (e) {
            b(".vls-gf-tab-view .vls-gf-image-panel li.selected").removeClass("selected").find(".image-icon").remove();
            u = null;
            e.preventDefault()
        });
        b("#vls-gf-bulk-select-invert-button").on("click.vls-gf", function (e) {
            b(".vls-gf-tab-view .vls-gf-image-panel li").each(function () {
                var e = b(this);
                e.hasClass("selected") ? e.removeClass("selected").find(".image-icon").remove() : e.addClass("selected").append('<div class="image-icon"><span></span></div>')
            });
            u = null;
            e.preventDefault()
        });
        e.find("li").on("click.vls-gf", function (g) {
            var m = b(this), t = m.data("vlsGfImageId"), q = m.data("vlsGfLinkId"), q = q ? q : 0;
            if (e.hasClass("select-mode")) {
                if (g.shiftKey && u) {
                    var k = t = e.find("li").index(u), r = e.find("li").index(m);
                    r < k && (k = r, r = t);
                    var d = u.hasClass("selected") ? "select" : "deselect";
                    e.find("li").each(function () {
                        var a = b(this), c = e.find("li").index(a);
                        c >= k && c <= r && ("select" === d ? a.addClass("selected").append('<div class="image-icon"><span></span></div>') : "deselect" === d && a.removeClass("selected").find(".image-icon").remove())
                    })
                } else m.hasClass("selected") ?
                    m.removeClass("selected").find(".image-icon").remove() : m.addClass("selected").append('<div class="image-icon"><span></span></div>');
                u = m
            } else {
                var a = [], h = [];
                e.find("li").each(function () {
                    a.push(parseInt(b(this).data("vlsGfImageId")));
                    var e = b(this).data("vlsGfLinkId");
                    h.push(parseInt(void 0 == e ? 0 : e))
                });
                VLS_GF.GalleryManager.showImageDetailsDialog(t, q, a, h)
            }
            g.preventDefault()
        });
        e.find("li").draggable({
            delay: 100,
            cursor: "none",
            helper: r,
            cursorAt: {top: 20, left: 20},
            appendTo: "body",
            addClasses: !1,
            start: m,
            stop: t
        })
    }

    function r() {
        e.hasClass("select-mode") || b(this).addClass("selected");
        var m = [];
        e.find("li.selected").each(function () {
            m.push(parseInt(b(this).data("vlsGfImageId")))
        });
        var t = b('<div id="vls-gf-image-drag-helper">' + m.length + "</div>");
        t.data("draggedImages", m);
        t.data("sourceAlbum", g);
        return t
    }

    function m() {
        b(".left-panel").addClass("drop-ready");
        b(this).addClass("dragging-image")
    }

    function t() {
        b(".left-panel").removeClass("drop-ready");
        b(this).removeClass("dragging-image");
        e.hasClass("select-mode") || b(this).removeClass("selected")
    }

    var g, e, u;
    return {
        loadContent: function (e, m) {
            g = m;
            b.get(ajaxurl, {
                action: "vls_gf_view_album_overview",
                item_type: e,
                album_id: m,
                tour: VLS_GF.TourModule && VLS_GF.TourModule.isActive()
            }, q, "html")
        }
    }
}(jQuery);
VLS_GF.AlbumLayoutPanelModule = function (b) {
    var q, r, m, t, g, e;

    function u(a) {
        f.layoutType = "";
        p = b(".vls-gf-tab-view").first();
        p.empty().append(a.view);
        x = p.find(".vls-gf-tab-container-layout > div");
        l = p.find(".vls-gf-tab-container-side form");
        p.find(".vls-gf-x-1-1").on("click.vls-gf", function (a) {
            w(1);
            a.preventDefault()
        });
        p.find(".vls-gf-x-1-2").on("click.vls-gf", function (a) {
            w(.5);
            a.preventDefault()
        });
        p.find(".vls-gf-x-1-4").on("click.vls-gf", function (a) {
            w(.25);
            a.preventDefault()
        });
        p.find(".vls-gf-btn-save-layout").on("click.vls-gf",
            function (a) {
                h();
                a.preventDefault()
            });
        l.find("input, select").on("change.vls-gf", function () {
            G();
            w(0)
        });
        G();
        w(1);
        x.find("li").draggable({
            containment: x, scroll: !0, cursor: "move", addClasses: !1, start: function (a, f) {
                var d = b(this);
                B.css({width: d.css("width"), height: d.css("height"), top: d.css("top"), left: d.css("left")});
                x.append(B);
                B.fadeIn(300);
                d.data("vlsGfMetroW") ? c.metroSize.width = parseInt(d.data("vlsGfMetroW")) : c.metroSize.width = 1;
                d.data("vlsGfMetroH") ? c.metroSize.height = parseInt(d.data("vlsGfMetroH")) :
                    c.metroSize.height = 1;
                c.centerShift = {x: Math.ceil(g / 2), y: Math.ceil(e / 2)};
                c.position = {x: f.position.left, y: f.position.top};
                c.editedItem = d;
                E(a, f)
            }, drag: E, stop: function (a, e) {
                B.fadeOut(500, function () {
                    b(this).detach()
                });
                c.editedItem = null;
                F()
            }
        })
    }

    function w(a) {
        0 < a && (q = a);
        p.find(".vls-gf-x-1-1").removeClass("vls-gf-active");
        p.find(".vls-gf-x-1-2").removeClass("vls-gf-active");
        p.find(".vls-gf-x-1-4").removeClass("vls-gf-active");
        r = Math.round(x.parent().width() * q);
        .25 >= q ? (x.css("width", "25%"), p.find(".vls-gf-x-1-4").addClass("vls-gf-active")) :
            .5 >= q ? (x.css("width", "50%"), p.find(".vls-gf-x-1-2").addClass("vls-gf-active")) : (x.css("width", "100%"), p.find(".vls-gf-x-1-1").addClass("vls-gf-active"));
        m = Math.floor(f.horizontalSpacing * q);
        t = Math.floor(f.verticalSpacing * q);
        g = Math.floor((r - m * (f.columnCount - 1)) / f.columnCount);
        e = Math.floor(g / f.aspectRatio);
        F()
    }

    function G() {
        var a = f.layoutType;
        f.layoutType = l.find("#vls-gf-param-layout-type").val();
        var b = "";
        "metro" == f.layoutType ? (f.columnCount = parseInt(l.find("#vls-gf-param-metro-column-count").val()),
            b = l.find("#vls-gf-param-metro-aspect-ratio").val(), f.horizontalSpacing = parseInt(l.find("#vls-gf-param-metro-horizontal-spacing").val()), f.verticalSpacing = parseInt(l.find("#vls-gf-param-metro-vertical-spacing").val())) : "grid" == f.layoutType && (f.columnCount = parseInt(l.find("#vls-gf-param-grid-column-count").val()), b = l.find("#vls-gf-param-grid-aspect-ratio").val(), f.horizontalSpacing = parseInt(l.find("#vls-gf-param-grid-horizontal-spacing").val()), f.verticalSpacing = parseInt(l.find("#vls-gf-param-grid-vertical-spacing").val()));
        b = b.replace(",", ".");
        b = b.replace(":", "/");
        b = b.replace("-", "/");
        b = b.split("/");
        f.aspectRatio = parseFloat(b[0]);
        1 < b.length && (f.aspectRatio = Math.round(f.aspectRatio / parseFloat(b[1]) * 1E3) / 1E3);
        .25 > f.aspectRatio && (f.aspectRatio = .25);
        4 < f.aspectRatio && (f.aspectRatio = 4);
        0 > f.horizontalSpacing && (f.horizontalSpacing = 0);
        100 < f.horizontalSpacing && (f.horizontalSpacing = 100);
        0 > f.verticalSpacing && (f.verticalSpacing = 0);
        100 < f.verticalSpacing && (f.verticalSpacing = 100);
        "grid" == f.layoutType ? (l.find("#vls-gf-param-grid-horizontal-spacing").val(f.horizontalSpacing.toString()),
            l.find("#vls-gf-param-grid-vertical-spacing").val(f.verticalSpacing.toString()), l.find("#vls-gf-param-grid-aspect-ratio").val(f.aspectRatio.toString())) : "metro" == f.layoutType && (l.find("#vls-gf-param-metro-horizontal-spacing").val(f.horizontalSpacing.toString()), l.find("#vls-gf-param-metro-vertical-spacing").val(f.verticalSpacing.toString()), l.find("#vls-gf-param-metro-aspect-ratio").val(f.aspectRatio.toString()));
        a != f.layoutType && (x.find("li.ui-resizable").resizable("destroy"), "metro" == f.layoutType ?
            (l.find("#vls-gf-parameters-metro").css("display", "block"), l.find("#vls-gf-parameters-grid").css("display", "none"), x.find("li").resizable({
                handles: "all",
                autoHide: !1,
                minHeight: 43,
                minWidth: 43,
                start: D,
                resize: H,
                stop: k
            })) : "grid" == f.layoutType ? (l.find("#vls-gf-parameters-metro").css("display", "none"), l.find("#vls-gf-parameters-grid").css("display", "block")) : (l.find("#vls-gf-parameters-metro").css("display", "none"), l.find("#vls-gf-parameters-grid").css("display", "none")))
    }

    function A(a, b) {
        return "x" + ("00000" +
            a).slice(-5) + "y" + ("00000" + b).slice(-5)
    }

    function E(a, b) {
        c.position = {x: b.position.left + c.centerShift.x, y: b.position.top + c.centerShift.y};
        if (c.position.x < c.currentArea.left || c.position.x > c.currentArea.right || c.position.y < c.currentArea.top || c.position.y > c.currentArea.bottom)c.currentArea.col = Math.floor(c.position.x / (g + m)), c.currentArea.row = Math.floor(c.position.y / (e + t)), c.currentArea.left = c.currentArea.col * (g + m) - m, c.currentArea.right = (c.currentArea.col + 1) * (g + m), c.currentArea.top = c.currentArea.row * (e +
        t) - t, c.currentArea.bottom = (c.currentArea.row + 1) * (e + t), F()
    }

    function D(a, f) {
        var d = b(this);
        B.css({width: d.css("width"), height: d.css("height"), top: d.css("top"), left: d.css("left")});
        d.closest("div").append(B);
        B.fadeIn(300);
        d.data("vlsGfMetroW") ? c.metroSize.width = parseInt(d.data("vlsGfMetroW")) : c.metroSize.width = 1;
        c.originalState.width = c.metroSize.width;
        d.data("vlsGfMetroH") ? c.metroSize.height = parseInt(d.data("vlsGfMetroH")) : c.metroSize.height = 1;
        c.originalState.height = c.metroSize.height;
        d.data("vlsGfCol") ?
            c.originalState.col = parseInt(d.data("vlsGfCol")) : c.originalState.col = 0;
        d.data("vlsGfRow") ? c.originalState.row = parseInt(d.data("vlsGfRow")) : c.originalState.row = 0;
        c.centerShift = {x: Math.ceil(g / 2), y: Math.ceil(e / 2)};
        c.position = {x: f.position.left, y: f.position.top};
        c.editedItem = d;
        E(a, f)
    }

    function H(a, b) {
        var d = Math.floor((b.size.width - Math.floor(.2 * g)) / (g + m)) + 1, f = Math.floor((b.size.height - Math.floor(.2 * e)) / (e + t)) + 1;
        if (d !== c.metroSize.width || f !== c.metroSize.height)c.metroSize.width = d, c.metroSize.height = f, c.currentArea.col =
            b.originalPosition.left === b.position.left ? c.originalState.col : c.originalState.col + c.originalState.width - d, c.currentArea.row = b.originalPosition.top === b.position.top ? c.originalState.row : c.originalState.row + c.originalState.height - f, F()
    }

    function k(a, e) {
        B.fadeOut(500, function () {
            b(this).detach()
        });
        c.editedItem = null;
        F()
    }

    function F() {
        switch (f.layoutType) {
            case "metro":
                d(f);
                break;
            case "grid":
                a(f)
        }
    }

    function d() {
        var a = [], d = 0, h = 0, l, k, n = [], p = 0, q = 0, r = 0, u = 0, w = 0;
        x.find("li").each(function () {
            var d = b(this), e = 0, f = 0,
                g = 1, h = 1;
            c.editedItem && (d.hasClass("ui-draggable-dragging") || d.hasClass("ui-resizable-resizing")) || (d.data("vlsGfCol") && (e = parseInt(d.data("vlsGfCol"))), d.data("vlsGfRow") && (f = parseInt(d.data("vlsGfRow"))), d.data("vlsGfMetroW") && (g = parseInt(d.data("vlsGfMetroW"))), d.data("vlsGfMetroH") && (h = parseInt(d.data("vlsGfMetroH"))), a.push({
                element: d,
                row: f,
                col: e,
                width: g,
                height: h
            }))
        });
        a.sort(function (a, b) {
            return 100 * a.row + a.col - 100 * b.row - b.col
        });
        if (c.editedItem) {
            if (c.currentArea.col + c.metroSize.width > f.columnCount)return;
            for (d = 0; d < c.metroSize.width; ++d)for (h = 0; h < c.metroSize.height; ++h)n.push(A(c.currentArea.col + d, c.currentArea.row + h));
            for (k = !1; !k;)0 > b.inArray(A(q, p), n) ? k = !0 : (++q, q >= f.columnCount && (q = 0, ++p));
            B.css({
                width: c.metroSize.width * (g + m) - m + "px",
                height: c.metroSize.height * (e + t) - t + "px",
                left: c.currentArea.col * (g + m) + "px",
                top: c.currentArea.row * (e + t) + "px"
            });
            c.editedItem.data("vlsGfCol", c.currentArea.col);
            c.editedItem.data("vlsGfRow", c.currentArea.row);
            c.editedItem.data("vlsGfMetroW", c.metroSize.width);
            c.editedItem.attr("data-vls-gf-metro-w",
                c.metroSize.width);
            c.editedItem.data("vlsGfMetroH", c.metroSize.height);
            c.editedItem.attr("data-vls-gf-metro-h", c.metroSize.height);
            w < c.currentArea.row + c.metroSize.height - 1 && (w = c.currentArea.row + c.metroSize.height - 1)
        }
        for (l = 0; l < a.length; ++l) {
            var y = a[l];
            y.width > f.columnCount && (y.width = f.columnCount);
            k = !1;
            u = q;
            for (r = p; !k;) {
                k = !0;
                for (d = 0; d < y.width; ++d)for (h = 0; h < y.height; ++h)if (u + d >= f.columnCount || 0 <= b.inArray(A(u + d, r + h), n))k = !1;
                k || (++u, u >= f.columnCount && (u = 0, ++r))
            }
            for (d = 0; d < y.width; ++d)for (h = 0; h < y.height; ++h)n.push(A(u +
            d, r + h));
            d = (g + m) * u;
            h = (e + t) * r;
            y.element.css("width", y.width * g + (y.width - 1) * m + "px").css("height", y.height * e + (y.height - 1) * t + "px").css("top", h + "px").css("left", d + "px");
            y.element.data("vlsGfCol", u);
            y.element.data("vlsGfRow", r);
            w < r + y.height - 1 && (w = r + y.height - 1);
            for (k = !1; !k;)0 > b.inArray(A(q, p), n) ? k = !0 : (++q, q >= f.columnCount && (q = 0, ++p))
        }
        x.find("ul").css("height", (w + 1) * e + w * t)
    }

    function a() {
        var a = [], d = 0, h = 0, l, k = 0, n = 0, p = 0;
        x.find("li").css("width", g + "px").css("height", e + "px").each(function () {
            var d = b(this), e = 0, f = 0,
                g = 0;
            c.editedItem && (d.hasClass("ui-draggable-dragging") || d.hasClass("ui-resizable-resizing")) || (d.data("vlsGfCol") && (e = parseInt(d.data("vlsGfCol"))), d.data("vlsGfRow") && (f = parseInt(d.data("vlsGfRow"))), d.data("vlsGfLinkId") && (g = parseInt(d.data("vlsGfLinkId"))), a.push({
                element: d,
                row: f,
                col: e,
                linkId: g
            }))
        });
        a.sort(function (a, b) {
            return 100 * a.row + a.col - 100 * b.row - b.col
        });
        c.editedItem && (B.css({
            left: c.currentArea.col * (g + m) + "px",
            top: c.currentArea.row * (e + t) + "px"
        }), c.editedItem.data("vlsGfCol", c.currentArea.col),
            c.editedItem.data("vlsGfRow", c.currentArea.row), p < c.currentArea.row && (p = c.currentArea.row));
        for (l = n = k = 0; l < a.length; ++l) {
            var q = a[l];
            c.editedItem && c.currentArea.col == n && c.currentArea.row == k && (++n, n >= f.columnCount && (n = 0, ++k));
            d = (g + m) * n;
            h = (e + t) * k;
            q.element.css("top", h + "px").css("left", d + "px");
            q.element.data("vlsGfCol", n).attr("data-vls-gf-col", n);
            q.element.data("vlsGfRow", k).attr("data-vls-gf-row", k);
            p < k && (p = k);
            ++n;
            n >= f.columnCount && (n = 0, ++k)
        }
        x.find("ul").css("height", (p + 1) * e + p * t)
    }

    function h() {
        var a =
            b(this);
        if (!a.hasClass("vls-gf-processing")) {
            a.addClass("vls-gf-processing");
            var c = {
                layout_type: f.layoutType,
                column_count: f.columnCount,
                aspect_ratio: f.aspectRatio,
                horizontal_spacing: f.horizontalSpacing,
                vertical_spacing: f.verticalSpacing
            }, d = [];
            x.find("li").each(function () {
                var a = b(this);
                d.push({
                    link_id: a.data("vlsGfLinkId"),
                    col: a.data("vlsGfCol"),
                    row: a.data("vlsGfRow"),
                    metro_w: a.data("vlsGfMetroW"),
                    metro_h: a.data("vlsGfMetroH")
                })
            });
            b.post(ajaxurl, {
                action: "vls_gf_update_album_layout", security: vlsGfGalleryAdminData.nonce,
                album_id: n, options: JSON.stringify(c), images: JSON.stringify(d)
            }, function (c) {
                a.removeClass("vls-gf-processing");
                b(".vls-gf-update-feedback").show().fadeOut(3E3)
            })
        }
    }

    var n, c = {
        editedItem: null,
        metroSize: {width: 1, height: 1},
        centerShift: {x: 0, y: 0},
        originalState: {width: 1, height: 1, col: 0, row: 0},
        position: {x: 0, y: 0},
        currentArea: {col: 0, row: 0, left: 0, right: 0, top: 0, bottom: 0}
    }, p, x, l;
    r = 0;
    q = 1;
    t = m = e = g = 0;
    var f = {
        layoutType: "",
        columnCount: 0,
        aspectRatio: 1,
        horizontalSpacing: 0,
        verticalSpacing: 0
    }, B = b('<div class="vls-gf-dragging-placeholder"></div>');
    return {
        loadContent: function (a) {
            n = a;
            b.getJSON(ajaxurl, {
                action: "vls_gf_view_album_layout",
                album_id: n,
                tour: VLS_GF.TourModule && VLS_GF.TourModule.isActive()
            }, u)
        }
    }
}(jQuery);
VLS_GF.ItemEditPanelModule = function (b) {
    function q(m) {
        b(".vls-gf-tab-view").empty().append(m.view);
        b("#vls-gf-item-details button.button-primary").on("click.vls-gf", r)
    }

    function r(m) {
        m.preventDefault();
        var q = b("#vls-gf-item-details"), g = q.find("button.button-primary");
        if (!g.hasClass("disabled")) {
            g.addClass("disabled");
            q.find(".vls-gf-update-feedback").hide();
            var e = {action: "vls_gf_update_album_details"};
            q.find("input, select, textarea").each(function () {
                e[this.name] = this.value
            });
            b.post(ajaxurl, e, function () {
                g.removeClass("disabled");
                q.find(".vls-gf-update-feedback").show().fadeOut(3E3)
            })
        }
    }

    return {
        loadContent: function (m, r) {
            b.getJSON(ajaxurl, {
                action: "vls_gf_view_gallery_item_edit",
                item_type: m,
                item_id: r,
                tour: VLS_GF.TourModule && VLS_GF.TourModule.isActive()
            }, q)
        }
    }
}(jQuery);
jQuery(document).ready(function () {
    VLS_GF.TourModule && VLS_GF.TourModule.start();
    VLS_GF.GalleryManager.init()
});
